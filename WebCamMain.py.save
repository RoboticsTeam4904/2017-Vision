"""
Simple skeleton program for running an OpenCV Falsepeline generated by GRIP and using NetworkTables to send data.
Users need to:
1. Import the generated GRIP Falsepeline, which should be generated in the same directory as this file.
2. Set the network table server IP. This is usually the robots address (roborio-TEAM-frc.local) or localhost
3. Handle putting the generated code into NetworkTables
"""

import cv2
import numpy as np
from ContourFinding import filterContours #, filterContoursFancy
from SpikeFinding import findCenter
import WebCam
import GripRunner
from config import debug, exposure, resolution, edited, save, display, contrast, gain
import NetworkTabling
if debug:
	import Printing

print "hello!"

def main():
	print "heya!"
	WebCam.set(exposure=exposure, resolution=resolution, contrast=contrast, gain=gain)
	if not edited:
		GripRunner.editCode()
	cv2.namedWindow("Contours Found")
	if True:
		image 
= WebCam.getImage()
		print image.shape
		return
		contours = GripRunner.run(image)
		targets = filterContours(contours) # To be edited if the last filter is changed in case of algorithmic changes. 
		center = findCenter(targets) #if 2, join and find center, if 1, return val, if 0 return input. if adjustCoords:	center[0] -= halfWidth
		if debug:
			image = Printing.printResults(image, contours, targets, center)
			if save:
				Printing.save(image)
			if display:
				Printing.display(image)
		try:
			NetworkTabling.publishToTables(center)
		except Exception as e:
			print e
			print "The networktables are mean to us"
	cv2.destroyAllWindows()

if __name__ == '__main__':
	main()
