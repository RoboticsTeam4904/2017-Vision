"""
Simple skeleton program for running an OpenCV Falsepeline generated by GRIP and using NetworkTables to send data.
Users need to:
1. Import the generated GRIP Falsepeline, which should be generated in the same directory as this file.
2. Set the network table server IP. This is usually the robots address (roborio-TEAM-frc.local) or localhost
3. Handle putting the generated code into NetworkTables
"""

import cv2
import numpy as np
from ContourFinding import filterContoursFancy
from SpikeFinding import findSpike
import WebCam
import GripRunner
import config
import NetworkTabling
if config.debug:
	import Printing

def main():
	WebCam.set(exposure=config.exposure, resolution=config.resolution, contrast=config.contrast, gain=config.gain)
	config.resolution = WebCam.getResolution()
	if not config.edited:
		GripRunner.editCode()
	if config.display:
		cv2.namedWindow("Contours Found")
	frameNum = 1
	while True:
		image = WebCam.getImage()
		contours = GripRunner.run(image)
		targets = filterContoursFancy(contours)
		isVisible, angleToGoal, distance = findSpike(targets)
		if config.debug:
			Printing.printResults(contours, distance)
		if config.save or config.display:
			Printing.drawImage(image, contours, targets)
			if config.save:
				Printing.save(image)
			if config.display:
				Printing.display(image, defaultSize=True)
		try:
			NetworkTabling.publishToTables(isVisible=isVisible, angleToGoal=angleToGoal, distance=distance, frameNum=frameNum)
		except Exception as error:
			if config.debug:
				print error
				# print "The networktables are mean to us"
		frameNum += 1
		#cv2.waitKey(500)
	if display:
		cv2.destroyAllWindows()

if __name__ == '__main__':
	main()
